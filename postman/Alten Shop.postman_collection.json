{
	"info": {
		"_postman_id": "d75ca07b-a86d-4534-bd34-024a65552b71",
		"name": "Alten Shop",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "8731764"
	},
	"item": [
		{
			"name": "Tests",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"test@example.com\",\r\n    \"password\": \"admin123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Access to admin list of products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create product + keep ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.collectionVariables.set(\"newItemID\", pm.response.json().id);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"code\": \"f230fh0g3\",\r\n    \"name\": \"Bamboo Watch 2\",\r\n    \"description\": \"Product Description\",\r\n    \"image\": \"bamboo-watch-2.jpg\",\r\n    \"price\": 70,\r\n    \"category\": \"Accessories\",\r\n    \"quantity\": 29,\r\n    \"inventoryStatus\": \"INSTOCK\",\r\n    \"rating\": 5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check if product created",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Created product exists\", () => {\r",
									"\r",
									"  const response = pm.response.json();\r",
									"  pm.expect(response.count).to.gte(1);\r",
									"\r",
									"  const newItemID = pm.collectionVariables.get(\"newItemID\");\r",
									"  const row = response.rows.find(row => row.id == newItemID);\r",
									"  pm.expect(row?.name).to.eql(\"Bamboo Watch 2\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/products?name=bamboo%20watch%202",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"products"
							],
							"query": [
								{
									"key": "name",
									"value": "bamboo%20watch%202"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update this product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"code\": \"f230fh0g3\",\r\n    \"name\": \"Bamboo Watch 2b\",\r\n    \"description\": \"Product Description\",\r\n    \"image\": \"bamboo-watch-2b.jpg\",\r\n    \"price\": 75,\r\n    \"category\": \"Accessories\",\r\n    \"quantity\": 34,\r\n    \"inventoryStatus\": \"INSTOCK\",\r\n    \"rating\": 5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/products/{{newItemID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"products",
								"{{newItemID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check updated product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Updated product exists\", () => {\r",
									"\r",
									"  const response = pm.response.json();\r",
									"  pm.expect(response.count).to.gte(1);\r",
									"\r",
									"  const newItemID = pm.collectionVariables.get(\"newItemID\");\r",
									"  const row = response.rows.find(row => row.id == newItemID);\r",
									"  pm.expect(row?.name).to.eql(\"Bamboo Watch 2b\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/products?name=bamboo%20watch%202b",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"products"
							],
							"query": [
								{
									"key": "name",
									"value": "bamboo%20watch%202b"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete this product",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ids\": [{{newItemID}}]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check deleted product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Deleted product exists\", () => {\r",
									"  const newItemID = pm.collectionVariables.get(\"newItemID\");\r",
									"  const exists = !!pm.response.json().rows.find(row => row.id == newItemID);\r",
									"  pm.expect(exists).to.eql(false);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:6516/admin/products?name=bamboo%20watch%202b",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "6516",
							"path": [
								"admin",
								"products"
							],
							"query": [
								{
									"key": "name",
									"value": "bamboo%20watch%202b"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin list of products inaccessible",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"products"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:6516",
			"type": "string"
		},
		{
			"key": "newItemID",
			"value": ""
		}
	]
}